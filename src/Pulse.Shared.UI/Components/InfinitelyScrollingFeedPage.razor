@typeparam TModel

@code {
    [Parameter] public List<TModel> EagerItems { get; set; } = new List<TModel>();
    [Parameter] public List<Guid> LazyItemIds { get; set; } = new List<Guid>();
    [Parameter] public required string FeedElementSelector { get; set; }
    [Parameter] public string? ContinuationUrl { get; set; }

    [Parameter] public required RenderFragment<TModel> ItemTemplate { get; set; }
    [Parameter] public RenderFragment<Guid>? LazyItemTemplate { get; set; }
}

@for (var i = 0; i < EagerItems.Count; i++)
{
    @if (i != EagerItems.Count - 1 || string.IsNullOrWhiteSpace(ContinuationUrl))
    {
        @ItemTemplate(EagerItems[i])
    }
    else
    {
        <div hx-get="@ContinuationUrl" hx-target="@FeedElementSelector" hx-swap="afterend" hx-trigger="revealed">
            @ItemTemplate(EagerItems[i])
        </div>
    }
}

@if(LazyItemTemplate is not null)
{
    @foreach (var itemId in LazyItemIds)
    {    
        @LazyItemTemplate(itemId)
    }
}
