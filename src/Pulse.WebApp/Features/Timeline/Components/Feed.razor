@using Pulse.WebApp.Features.Posts.Components
@using Pulse.Posts.Contracts
@using Pulse.Timeline.Contracts
@using Pulse.WebApp.Auth
@inject ITimelineService TimelineService
@inject IPostQueryService PostQueryService
@inject IHttpContextAccessor HttpContextAccessor

@code {
    private IEnumerable<DisplayPost> FirstPage { get; set; } = new List<DisplayPost>();

    protected override async Task OnInitializedAsync()
    {
        var userId = HttpContextAccessor.HttpContext?.GetUserId();

        if (!userId.HasValue)
        {
            return;
        }

        var timeline = await TimelineService.GetTimelinePage(userId.Value, string.Empty, 10);
        FirstPage = await PostQueryService.Get(timeline, CancellationToken.None);
    }
}

<div id="user-feed" class="[&_p:last-child]:text-slate-500 [&_p:first-child]:text-lg divide-y divide-slate-200">
    @if (FirstPage.Any())
    {
        <FeedPage EagerPosts="@FirstPage.ToList()" />
    }
    else
    {
        <div class="text-center text-slate-500 text-lg p-8">
            <p>Nothing to see here.</p>
        </div>
    }
</div>