@using Pulse.Shared.UI.Components
@using Pulse.Posts.UI.Components
@using Pulse.Posts.UI.Models
@using Pulse.Posts.UI.Mapping
@using Pulse.Posts.Contracts
@using Pulse.Timeline.Contracts
@using Pulse.Users.Contracts
@using Pulse.Shared.Auth
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]

@inject ITimelineService TimelineService
@inject IPostQueryService PostQueryService
@inject IUserQueries UserQueries
@inject PostMapper Mapper
@inject IdentityProvider IdentityProvider

@code {
    private IEnumerable<PostViewModel> FirstPage { get; set; } = new List<PostViewModel>();
    private string Etag { get; set; } = string.Empty;
    private string ContinuationToken { get; set; } = string.Empty;
    private bool IsEmpty => !FirstPage.Any();

    protected override async Task OnInitializedAsync()
    {
        var currentUser = IdentityProvider.GetCurrentUser();
        var timeline = await TimelineService.GetTimelinePage(currentUser.Id, string.Empty, 50);
        var posts = await PostQueryService.Get(timeline.Ids, CancellationToken.None);
        var userTasks = posts.Select(p => p.UserId).Distinct().Select(UserQueries.GetUser);

        var users = await Task.WhenAll(userTasks);

        FirstPage = posts.Select(p => Mapper.MapToViewModel(p, users.First(u => u.Id == p.UserId)));
        ContinuationToken = timeline.ContinuationToken;
        Etag = timeline.Etag;
    }

    private string GetHiddenAttribute()
    {
        return IsEmpty ? "hidden" : string.Empty;
    }
}

<LoadMoreButton Etag="@Etag" HasChanges="false"/>
<div data-controller="post-feed" data-js-is-empty="@IsEmpty.ToString().ToLower()" id="user-feed" class="show-new-post">
    @if (FirstPage.Any())
    {
        <FeedPage EagerPosts="@FirstPage" ContinuationToken="@ContinuationToken"/>
    }
    
    <div data-component="empty-message" @GetHiddenAttribute() class="text-center text-slate-500 text-lg p-8">
        <p>Nothing to see here.</p>
    </div>
</div>